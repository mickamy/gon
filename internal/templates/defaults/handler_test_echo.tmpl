package handler_test

import (
	"encoding/json"
	"net/http"
	"testing"

	"github.com/labstack/echo/v4"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"

	"{{.DomainPackage}}/handler"
	"{{.DomainPackage}}/usecase"
	"{{.TestUtilPackage}}/httptestutil"
)

{{- range .Actions}}

func Test{{.Name}}{{.Entity}}(t *testing.T) {
	t.Parallel()

	// arrange
	c, recorder := httptestutil.NewEchoRequest(t, httptestutil.RequestBuilder{
		Method:      http.Method{{.Method}},
		Path:        "/{{.Path}}",
		Query:       nil,
		Body:        nil,
		ContentType: echo.MIMEApplicationJSON,
	})
	uc := usecase.New{{.Name}}{{.Entity}}()

	// act
	sut := handler.{{.Name}}{{.Entity}}(uc)
	require.NoError(t, sut(c))

	// assert
	require.Equal(t, http.StatusOK, recorder.Code)
	var res interface{}
	assert.NoError(t, json.NewDecoder(recorder.Body).Decode(&res))
	assert.NotNil(t, res)
}

{{- end}}
